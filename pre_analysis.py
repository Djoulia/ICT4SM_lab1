# -*- coding: utf-8 -*-
"""Pre-analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wJlVP9qKSerIYmlL6ams-l5arO8txr8c
"""

!pip install pymongo[srv]

from datetime import datetime, tzinfo, timezone
from pymongo import MongoClient
client = MongoClient('mongodb://ictts:Ict4SM22!@bigdatadb.polito.it/?authSource=carsharing&tls=true&tlsAllowInvalidCertificates=true')

"""# Different cities"""

result = client['carsharing']['PermanentBookings'].aggregate([
    {
        '$group': {
            '_id': '$city'
        }
    }
])
for doc in result:
    print(doc)

"""# Dates for the first and latest register

This step is made for each collection
"""

result = client['carsharing']['PermanentBookings'].aggregate([
    {
        '$group': {
            '_id': None,
            'earliestInitDate': {
                '$min': '$init_date'
            },
            'latestFinalDate': {
                '$max': '$final_date'
            }
        }
    }
])
for doc in result:
    print(doc)

"""# Total seen cars and weekly cars"""

result = client['carsharing']['PermanentBookings'].aggregate([
    {
        '$match': {
            'city': {
                '$in': [
                    'Madrid', 'Austin', 'Denver'
                ]
            }
        }
    }, {
        '$facet': {
            'total_fleet': [
                {
                    '$group': {
                        '_id': '$city',
                        'unique_cars': {
                            '$addToSet': '$vin'
                        }
                    }
                }, {
                    '$project': {
                        'total_cars': {
                            '$size': '$unique_cars'
                        }
                    }
                }
            ],
            'weekly_fleet': [
                {
                    '$match': {
                        'init_date': {
                            '$gte': datetime(2017, 1, 1, 0, 0, 0, tzinfo=timezone.utc),
                            '$lt': datetime(2017, 2, 1, 0, 0, 0, tzinfo=timezone.utc)
                        }
                    }
                }, {
                    '$group': {
                        '_id': '$city',
                        'unique_cars': {
                            '$addToSet': '$vin'
                        }
                    }
                }, {
                    '$project': {
                        'weekly_fleet_size': {
                            '$size': '$unique_cars'
                        }
                    }
                }
            ]
        }
    }
])

for doc in result:
    print(doc)

result = client['carsharing']['PermanentBookings'].aggregate([

    {
        '$match': {
            'city': { '$in': ['Madrid', 'Denver', 'Austin'] },
            'public_transport': { '$exists': True, '$ne': None }
        }
    },

    {
        '$group': {
            '_id': '$city',
            'unique_cars': { '$addToSet': '$vin' }
        }
    },

    {
        '$project': {
            'total_unique_cars': { '$size': '$unique_cars' }
        }
    }
])
for doc in result:
    print(doc)

"""All the data has the same values for the field of public_transport and it is "-1"
"""